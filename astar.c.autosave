#include "astar.h"
#include "ghost.h"
#include "pacman.h"
#include "liste_chainee.h"

float heuristique(Ghost *g,Pacman *p);

unsigned int nextDirection(Ghost *g,Pacman *p){
    Map *map = getMapInstance();
    float distance = heuristique(*g,*p);

    return direction;
}

float heuristique(Ghost *g,Pacman *p) {
    int gx,gy,px,py;
    float res;
    gx = g->x;
    gy = g->y;
    px = p->x;
    py = p->y;
    res = (py-px)/(gy-gx);

    return res;
}

Liste *graphageMap(Map *m) {
    int c,l,i,j;
    c = m ->col;
    l = m ->row;

    Liste rep[c][l];
    for (i = 0;i < c; i++) {
        for (j = 0; j < l; j++) {
            Liste 
            if (i == 0) {
                if (j == 0) {
                    
                }
        
            }
        }
    }


}
